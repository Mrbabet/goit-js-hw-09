{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA4BbN,EAAKC,KAAKa,iBAAiB,UAvBV,SAAUC,GACzBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOH,EAAEI,OAAOb,MAAMc,OAC9BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OAEpC,IAAK,IAAIG,EAAW,EAAGA,EAAWD,EAAQC,IACxCnB,EAAcmB,EAAUN,GACrBO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA3B,GAAS4B,OAAOC,QACd,qBAAqBtB,EAAW,QAAQC,MACzC,IAEFsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA3B,GAAS4B,OAAOG,QACd,oBAAoBxB,EAAW,QAAQC,MACxC,IAELW,GAASI,EAEXrB,EAAKC,KAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst onSubmit = function (e) {\n  e.preventDefault();\n  let delay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n\n  for (let position = 0; position < amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  refs.form.reset();\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","target","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.3a0afc03.js.map"}